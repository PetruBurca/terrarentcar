import { useState, useEffect } from "react";
import { X } from "lucide-react";
import { Button } from "@/components/ui/utils/button";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/overlays/dialog";
import { useTranslation } from "react-i18next";
import { createOrder, fetchOrders, Timestamp } from "@/lib/firestore";
import { uploadFileToFirebase } from "@/lib/firebase";
import { useMediaQuery } from "@/hooks";
import { useCarReservation } from "@/hooks/use-car-reservation";
import { useQuery } from "@tanstack/react-query";
import { toast } from "@/components/ui/utils/use-toast";

// –ò–º–ø–æ—Ä—Ç –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { ReservationStep1 } from "./ReservationStep1";
import { ReservationStep2 } from "./ReservationStep2";
import { ReservationStep3 } from "./ReservationStep3";
import { SuccessModal } from "./SuccessModal";
import {
  Car as BaseCar,
  FormData as ReservationFormData,
  WizardData,
  PassportFiles,
  PassportUrls,
} from "@/types/reservation";

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Car –∏–∑ types/reservation.ts –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç carNumber
type Car = BaseCar;

interface CarReservationModalProps {
  isOpen: boolean;
  onClose: () => void;
  car: Car;
}

// Wizard steps
const STEPS = ["main", "summary", "personal"];

const CarReservationModal = ({
  isOpen,
  onClose,
  car,
}: CarReservationModalProps) => {
  const { t, i18n } = useTranslation();
  const isMobile = useMediaQuery("(max-width: 767px)");

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –∏–∑–æ–ª—è—Ü–∏–µ–π –ø–æ –º–∞—à–∏–Ω–∞–º
  const {
    formData,
    setFormData,
    currentStep,
    setCurrentStep,
    uploadedPhotos,
    setUploadedPhotos,
    passportFiles,
    setPassportFiles,
    passportUrls,
    setPassportUrls,
    privacyAccepted,
    setPrivacyAccepted,
    wizardData,
    setWizardData,
    selectedCountryCode,
    setSelectedCountryCode,
    activeImageIndex,
    setActiveImageIndex,
  } = useCarReservation(car.id);

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞
  const uploadPassportPhotos = async (): Promise<{
    front: string;
    back: string;
  }> => {
    console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞:", passportFiles);

    const uploadPromises = [];

    if (passportFiles.front) {
      console.log("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏—Ü–µ–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É:", passportFiles.front.name);
      uploadPromises.push(
        uploadFileToFirebase(passportFiles.front, "passport-front")
          .then((url) => {
            console.log("‚úÖ –õ–∏—Ü–µ–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:", url);
            return { type: "front", url };
          })
          .catch((error) => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏—Ü–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã:", error);
            return { type: "front", url: null };
          })
      );
    } else {
      console.log("‚ö†Ô∏è –õ–∏—Ü–µ–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞");
      uploadPromises.push(Promise.resolve({ type: "front", url: null }));
    }

    if (passportFiles.back) {
      console.log("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É:", passportFiles.back.name);
      uploadPromises.push(
        uploadFileToFirebase(passportFiles.back, "passport-back")
          .then((url) => {
            console.log("‚úÖ –û–±—Ä–∞—Ç–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:", url);
            return { type: "back", url };
          })
          .catch((error) => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã:", error);
            return { type: "back", url: null };
          })
      );
    } else {
      console.log("‚ö†Ô∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞");
      uploadPromises.push(Promise.resolve({ type: "back", url: null }));
    }

    const results = await Promise.all(uploadPromises);
    console.log("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏:", results);

    const frontUrl =
      results.find((r) => r.type === "front")?.url ||
      "https://example.com/passport-front.jpg";
    const backUrl =
      results.find((r) => r.type === "back")?.url ||
      "https://example.com/passport-back.jpg";

    console.log("üîó –§–∏–Ω–∞–ª—å–Ω—ã–µ URL:", { front: frontUrl, back: backUrl });
    return { front: frontUrl, back: backUrl };
  };

  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∞–≥–æ–≤
  const stepIndicator = `${currentStep + 1}/${STEPS.length}`;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
    if (isSubmitting) return;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (
      !formData.firstName ||
      !formData.lastName ||
      !formData.email ||
      !formData.phone
    ) {
      toast({
        title: "–ù–µ–ø–æ–ª–Ω–∞—è —Ñ–æ—Ä–º–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.",
        variant: "destructive",
      });
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneDigits = formData.phone.replace(/\D/g, "");
    if (phoneDigits.length < 9) {
      toast({
        title: "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
        variant: "destructive",
      });
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è IDNP
    if (!formData.idnp || formData.idnp.length !== 13) {
      toast({
        title: "–ù–µ–≤–µ—Ä–Ω—ã–π IDNP",
        description: "IDNP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 13 —Ü–∏—Ñ—Ä.",
        variant: "destructive",
      });
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–≥–ª–∞—Å–∏—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π
    if (!privacyAccepted) {
      toast({
        title: "–°–æ–≥–ª–∞—Å–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ",
        description: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.",
        variant: "destructive",
      });
      return;
    }

    setIsSubmitting(true);
    const form = e.target as HTMLFormElement;
    const formDataObj = new globalThis.FormData(form);

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ Firebase Storage
      const documents = await uploadPassportPhotos();

      await createOrder({
        carId: car.id,
        carName: car.name,
        carNumber: car.carNumber,
        customerName: formData.firstName + " " + formData.lastName,
        customerEmail: formData.email,
        customerPhone: formData.phone,
        customerPassport: formData.idnp,
        rentFrom: Timestamp.fromDate(new Date(formData.pickupDate)),
        rentTo: Timestamp.fromDate(new Date(formData.returnDate)),
        totalDays: calculateDays(),
        totalPrice: finalRentalCost,
        status: "pending",
        documents: {
          front: documents.front,
          back: documents.back,
        },
        // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        pickupTime: formData.pickupTime,
        paymentMethod: formData.paymentMethod,
        paymentMessage: formData.paymentMessage || "",
        pickupType: formData.pickupType,
        deliveryType: formData.pickupType === "address" ? "delivery" : "pickup",
        deliveryAddress: formData.pickupAddress,
        unlimitedMileage: formData.unlimitedMileage,
        clubCard: formData.clubCard,
        goldCard: formData.goldCard,
        doubleKmAmount: formData.doubleKmAmount || 0,
        discountAmount: formData.discountAmount || 0,
        deliveryAmount: formData.deliveryAmount || 0,
        servedBy: formData.servedBy || "",
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—Ö–∞
      setShowSuccessModal(true);
      setIsSubmitting(false);
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:", e);

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
      if (isMobile) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        const errorMessage = e instanceof Error ? e.message : String(e);

        if (
          errorMessage.includes("network") ||
          errorMessage.includes("fetch")
        ) {
          toast({
            title: "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é",
            description:
              "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            variant: "destructive",
          });
        } else if (
          errorMessage.includes("storage") ||
          errorMessage.includes("cache")
        ) {
          toast({
            title: "–ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏",
            description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å.",
            variant: "destructive",
          });
        } else {
          toast({
            title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
            description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",
            variant: "destructive",
          });
        }
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
          description:
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
          variant: "destructive",
        });
      }

      setIsSubmitting(false);
    }
  };

  const calculateDays = () => {
    if (formData.pickupDate && formData.returnDate) {
      const pickup = new Date(formData.pickupDate);
      const returnDate = new Date(formData.returnDate);
      if (isNaN(pickup.getTime()) || isNaN(returnDate.getTime())) return 1;
      if (returnDate <= pickup) return 1;
      const diffTime = Math.abs(returnDate.getTime() - pickup.getTime());
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      return diffDays;
    }
    return 1;
  };

  const days = calculateDays();
  const getPricePerDay = (days: number) => {
    if (days >= 30) return car.price30plus;
    if (days >= 21) return car.price21to29;
    if (days >= 11) return car.price11to20;
    if (days >= 2) return car.price2to10;
    return car.price;
  };
  const pricePerDay = getPricePerDay(days);
  const totalPrice = pricePerDay * days;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–∫–∏ –ø–æ –∫–∞—Ä—Ç–µ
  const calculateDiscount = (basePrice: number) => {
    if (wizardData.goldCard) {
      return basePrice * 0.25; // 25% —Å–∫–∏–¥–∫–∞ –¥–ª—è Gold –∫–∞—Ä—Ç—ã
    } else if (wizardData.clubCard) {
      return basePrice * 0.1; // 10% —Å–∫–∏–¥–∫–∞ –¥–ª—è Club –∫–∞—Ä—Ç—ã
    }
    return 0; // –ù–µ—Ç —Å–∫–∏–¥–∫–∏
  };

  // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏
  // –°–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –±–∞–∑–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã, –Ω–µ –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —É—Å–ª—É–≥–∞–º
  const discount = calculateDiscount(totalPrice); // –°–∫–∏–¥–∫–∞ —Ç–æ–ª—å–∫–æ –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã
  const rentalCostWithDiscount = totalPrice - discount; // –°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã —Å–æ —Å–∫–∏–¥–∫–æ–π
  const unlimitedMileageCost = wizardData.unlimitedMileage
    ? calculateDays() * 20
    : 0; // –°—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ –∫–∏–ª–æ–º–µ—Ç—Ä–∞–∂–∞
  const deliveryCost =
    wizardData.pickupType === "address" || wizardData.pickupType === "airport"
      ? 20
      : 0; // –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
  const additionalServices = unlimitedMileageCost + deliveryCost; // –í—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
  const washingCost = 20; // –°—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–π–∫–∏ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
  const finalRentalCost =
    rentalCostWithDiscount + additionalServices + washingCost; // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
  const validateStep = (stepIndex: number): boolean => {
    switch (stepIndex) {
      case 0: {
        // –®–∞–≥ 1 - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if (!formData.pickupDate) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.pickupDateRequired",
              "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤—ã–¥–∞—á–∏"
            ),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.returnDate) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.returnDateRequired",
              "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤–æ–∑–≤—Ä–∞—Ç–∞"
            ),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.pickupTime) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.pickupTimeRequired",
              "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –≤—ã–¥–∞—á–∏"
            ),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –≤—ã–¥–∞—á–∏
        const pickup = new Date(formData.pickupDate);
        const returnDate = new Date(formData.returnDate);
        if (returnDate <= pickup) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.invalidDateRange",
              "–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –≤—ã–¥–∞—á–∏"
            ),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞
        if (
          wizardData.pickupType === "address" &&
          !wizardData.pickupAddress?.trim()
        ) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.addressRequired",
              "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
            ),
            variant: "destructive",
          });
          return false;
        }
        return true;
      }

      case 1: {
        // –®–∞–≥ 2 - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
        return true;
      }

      case 2: {
        // –®–∞–≥ 3 - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (!formData.firstName.trim()) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t("validation.firstNameRequired", "–í–≤–µ–¥–∏—Ç–µ –∏–º—è"),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.lastName.trim()) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t("validation.lastNameRequired", "–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.email.trim()) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t("validation.emailRequired", "–í–≤–µ–¥–∏—Ç–µ email"),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(formData.email)) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.emailInvalid",
              "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email"
            ),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.phone.trim()) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.phoneRequired",
              "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            ),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ä–æ–≤–Ω–æ 9 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã)
        const phoneDigits = formData.phone
          .replace(/\D/g, "")
          .replace(selectedCountryCode.replace(/\D/g, ""), "");
        if (phoneDigits.length !== 9) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.phoneInvalid",
              "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 9 —Ü–∏—Ñ—Ä (0 + –∫–æ–¥ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ + –Ω–æ–º–µ—Ä)"
            ),
            variant: "destructive",
          });
          return false;
        }
        if (!formData.idnp.trim()) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t("validation.idnpRequired", "–í–≤–µ–¥–∏—Ç–µ IDNP"),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ IDNP (–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 13 —Ü–∏—Ñ—Ä)
        const idnpDigits = formData.idnp.replace(/\D/g, "");
        if (idnpDigits.length !== 13) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.idnpInvalid",
              "IDNP –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 13 —Ü–∏—Ñ—Ä"
            ),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        if (!uploadedPhotos.front) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.frontPhotoRequired",
              "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –ª–∏—Ü–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞"
            ),
            variant: "destructive",
          });
          return false;
        }
        if (!uploadedPhotos.back) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.backPhotoRequired",
              "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞"
            ),
            variant: "destructive",
          });
          return false;
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        if (!privacyAccepted) {
          toast({
            title: t("validation.error", "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"),
            description: t(
              "validation.privacyRequired",
              "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
            ),
            variant: "destructive",
          });
          return false;
        }
        return true;
      }

      default:
        return true;
    }
  };

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
  const goNext = () => {
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
    if (!validateStep(currentStep)) {
      return; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –µ—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞
    }

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ wizardData –≤ formData –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
    setFormData((prev) => ({
      ...prev,
      pickupDate: wizardData.pickupDate || "",
      returnDate: wizardData.returnDate || "",
      pickupTime: wizardData.pickupTime || "10:00",
      pickupType: wizardData.pickupType || "office",
      pickupAddress: wizardData.pickupAddress || "",
      unlimitedMileage: wizardData.unlimitedMileage || false,
      goldCard: wizardData.goldCard || false,
      clubCard: wizardData.clubCard || false,
    }));

    setCurrentStep((s) => {
      const next = Math.min(s + 1, STEPS.length - 1);
      if (next === 1) {
        setTimeout(() => {
          const modal = document.querySelector(
            '.DialogContent, .dialog-content, [role="dialog"]'
          );
          if (modal) {
            modal.scrollTo({ top: 0, behavior: "smooth" });
          } else {
            window.scrollTo({ top: 0, behavior: "smooth" });
          }
        }, 50);
      }
      if (next === 2) {
        setTimeout(() => {
          const modal = document.querySelector(
            '.DialogContent, .dialog-content, [role="dialog"]'
          );
          if (modal) {
            modal.scrollTo({ top: 0, behavior: "smooth" });
          } else {
            window.scrollTo({ top: 0, behavior: "smooth" });
          }
        }, 50);
      }
      return next;
    });
  };
  const goBack = () => setCurrentStep((s) => Math.max(s - 1, 0));

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É—Å–ø–µ—Ö–∞
  const handleSuccessModalClose = () => {
    setShowSuccessModal(false);
    onClose();
  };

  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞
  useEffect(() => {
    if (!isOpen) {
      setCurrentStep(0);
      setIsSubmitting(false);
      setPrivacyAccepted(false);
      setUploadedPhotos({ front: false, back: false });
      setShowSuccessModal(false);
    }
  }, [isOpen, setCurrentStep, setPrivacyAccepted, setUploadedPhotos]);

  const { data: orders = [] } = useQuery({
    queryKey: ["orders", i18n.language],
    queryFn: fetchOrders,
    staleTime: 0, // –£–±–∏—Ä–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
  });
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞—è–≤–∫–∏ –ø–æ —ç—Ç–æ–π –º–∞—à–∏–Ω–µ –∏ —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ
  const carOrders = orders.filter((order) => {
    const hasCarId = order.carId === car.id;
    const isConfirmed = order.status === "confirmed";
    const hasDates = order.rentFrom && order.rentTo;

    return hasCarId && isConfirmed && hasDates;
  });
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –¥–∞—Ç
  function parseDate(str: string) {
    try {
      if (!str) return null;
      if (str.includes("-")) {
        // –§–æ—Ä–º–∞—Ç YYYY-MM-DD
        const [year, month, day] = str.split("-");
        return new Date(+year, +month - 1, +day);
      } else if (str.includes(".")) {
        // –§–æ—Ä–º–∞—Ç –¥–¥.–º–º.–≥–≥–≥–≥
        const [day, month, year] = str.split(".");
        return new Date(+year, +month - 1, +day);
      }
      return null;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤ parseDate:", error, "–¥–ª—è —Å—Ç—Ä–æ–∫–∏:", str);
      return null;
    }
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞—Ç (—Ç–æ–ª—å–∫–æ –¥–∞—Ç–∞, –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏, —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ø–∞—Ä—Å–µ—Ä–æ–º)
  const disabledDays: Date[] = [];

  try {
    // –ï—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ - –±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –¥–∞—Ç—ã
    if (car.status && car.status.toLowerCase() === "–Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏") {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –¥–∞—Ç—ã –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 1 –≥–æ–¥–∞ (365 –¥–Ω–µ–π)
      const today = new Date();
      for (let i = 0; i < 365; i++) {
        const date = new Date(today);
        date.setDate(today.getDate() + i);
        disabledDays.push(
          new Date(date.getFullYear(), date.getMonth(), date.getDate())
        );
      }
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—ã –∏–∑ –∑–∞–∫–∞–∑–æ–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏
      carOrders.forEach((order) => {
        try {
          const start = order.rentFrom.toDate();
          const end = order.rentTo.toDate();
          if (!start || !end) return;
          for (
            let d = new Date(
              start.getFullYear(),
              start.getMonth(),
              start.getDate()
            );
            d <= end;
            d.setDate(d.getDate() + 1)
          ) {
            disabledDays.push(
              new Date(d.getFullYear(), d.getMonth(), d.getDate())
            );
          }
        } catch (error) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:", error, order);
        }
      });
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ disabledDays:", error);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏)
  try {
    if (!car.status || car.status.toLowerCase() !== "–Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏") {
      if (car.blockFromDate && car.blockToDate) {
        const blockStart = parseDate(car.blockFromDate);
        const blockEnd = parseDate(car.blockToDate);
        if (blockStart && blockEnd) {
          for (
            let d = new Date(
              blockStart.getFullYear(),
              blockStart.getMonth(),
              blockStart.getDate()
            );
            d <= blockEnd;
            d.setDate(d.getDate() + 1)
          ) {
            const disabledDay = new Date(
              d.getFullYear(),
              d.getMonth(),
              d.getDate()
            );
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞
            const isAlreadyDisabled = disabledDays.some(
              (existingDate) =>
                existingDate.getFullYear() === disabledDay.getFullYear() &&
                existingDate.getMonth() === disabledDay.getMonth() &&
                existingDate.getDate() === disabledDay.getDate()
            );
            if (!isAlreadyDisabled) {
              disabledDays.push(disabledDay);
            }
          }
        }
      }
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", error);
  }

  return (
    <>
      <Dialog open={isOpen} onOpenChange={isSubmitting ? undefined : onClose}>
        <DialogContent
          className={
            isMobile
              ? "fixed inset-0 w-full max-w-[400px] sm:max-w-[98vw] min-w-0 min-h-[100dvh] h-[100dvh] top-0 left-0 z-[3000] bg-background overflow-y-auto rounded-none p-0 pt-4 pb-[env(safe-area-inset-bottom,12px)] px-4 sm:px-2 box-border"
              : "max-w-4xl max-h-[90vh] overflow-y-auto z-[3000] !top-1/2 !left-1/2 !translate-x-[-50%] !translate-y-[-50%] sm:max-w-lg md:max-w-2xl p-6 md:px-8 box-border"
          }
          style={
            isMobile
              ? { zIndex: 3000, maxWidth: "100vw", minWidth: 0 }
              : { zIndex: 3000 }
          }
        >
          {/* –ö—Ä–µ—Å—Ç–∏–∫ –≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ */}
          <button
            onClick={isSubmitting ? undefined : onClose}
            className={`absolute top-3 right-3 z-[3001] text-3xl text-[#ffffff] hover:text-[#686868] transition md:top-4 md:right-4 bg-black/20 rounded-full p-1 ${
              isSubmitting ? "opacity-50 cursor-not-allowed" : ""
            }`}
            aria-label={t("reservation.cancel")}
            disabled={isSubmitting}
          >
            <X size={24} />
          </button>
          <DialogHeader>
            <DialogTitle className="text-2xl font-bold">
              {t("reservation.title")}
            </DialogTitle>
            <DialogDescription className="sr-only">
              {t(
                "reservation.dialogDescription",
                "–§–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É."
              )}
            </DialogDescription>
          </DialogHeader>

          {/* Wizard steps */}
          <div className="w-full pb-4">
            {currentStep === 0 && (
              <ReservationStep1
                car={car}
                formData={formData}
                setFormData={setFormData}
                wizardData={wizardData}
                setWizardData={setWizardData}
                currentStep={currentStep}
                stepIndicator={stepIndicator}
                disabledDays={disabledDays}
                goNext={goNext}
                goBack={goBack}
                i18n={i18n}
              />
            )}
            {currentStep === 1 && (
              <ReservationStep2
                car={car}
                formData={formData}
                wizardData={wizardData}
                setWizardData={setWizardData}
                currentStep={currentStep}
                stepIndicator={stepIndicator}
                calculateDays={calculateDays}
                totalPrice={totalPrice}
                discount={discount}
                finalRentalCost={finalRentalCost}
                goNext={goNext}
                goBack={goBack}
                i18n={i18n}
              />
            )}
            {currentStep === 2 && (
              <ReservationStep3
                car={car}
                formData={formData}
                setFormData={setFormData}
                uploadedPhotos={uploadedPhotos}
                setUploadedPhotos={setUploadedPhotos}
                passportFiles={passportFiles}
                setPassportFiles={setPassportFiles}
                passportUrls={passportUrls}
                setPassportUrls={setPassportUrls}
                privacyAccepted={privacyAccepted}
                setPrivacyAccepted={setPrivacyAccepted}
                selectedCountryCode={selectedCountryCode}
                setSelectedCountryCode={setSelectedCountryCode}
                currentStep={currentStep}
                stepIndicator={stepIndicator}
                finalRentalCost={finalRentalCost}
                isSubmitting={isSubmitting}
                handleSubmit={handleSubmit}
                goBack={goBack}
              />
            )}
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ */}
      <SuccessModal
        isOpen={showSuccessModal}
        onClose={handleSuccessModalClose}
        car={car}
      />
    </>
  );
};

export { CarReservationModal };
export default CarReservationModal;

// –°—Ç–∏–ª–∏ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
const calendarStyles = `
  .calendar-day-disabled-strike::after {
    content: "";
    position: absolute;
    left: 15%;
    top: 50%;
    width: 70%;
    height: 2px;
    background: linear-gradient(90deg, #ff3333 60%, transparent 100%);
    transform: rotate(-20deg);
    pointer-events: none;
    z-index: 2;
  }
  .calendar-day-disabled-strike::before {
    content: "-";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) scale(1.5);
    color: #ff3333;
    font-size: 1.2em;
    font-weight: bold;
    pointer-events: none;
    z-index: 3;
  }
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
if (typeof document !== "undefined") {
  const existingStyle = document.getElementById("calendar-styles");
  if (!existingStyle) {
    const styleElement = document.createElement("style");
    styleElement.id = "calendar-styles";
    styleElement.textContent = calendarStyles;
    document.head.appendChild(styleElement);
  }
}
