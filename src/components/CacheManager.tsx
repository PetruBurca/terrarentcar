import { useEffect } from "react";

// –†–∞—Å—à–∏—Ä—è–µ–º window –¥–ª—è easter egg
declare global {
  interface Window {
    terraRentCarEasterEgg?: () => void;
  }
}

interface CacheManagerGlobal {
  clearAll: () => void;
  clearQuery: () => void;
  clearStorage: () => void;
  getTimeSinceLastVisit: () => number;
  shouldClearCacheByTime: () => boolean;
  lastVisitTime: number;
  forceClear: () => void;
  checkCache: () => string[];
  forceClearProduction: () => void;
  clearServiceWorker: () => void;
  clearLocalStorage: () => void;
}

declare global {
  interface Window {
    cacheManager?: CacheManagerGlobal;
  }
}

interface CacheManagerProps {
  autoClearTime?: number;
  enableDoubleRefresh?: boolean;
  showDebugInfo?: boolean;
}

const CacheManager = ({
  autoClearTime = 20 * 60 * 1000, // 20 –º–∏–Ω—É—Ç –¥–ª—è production
  enableDoubleRefresh = true,
  showDebugInfo = false,
}: CacheManagerProps) => {
  const isDevelopment = process.env.NODE_ENV === "development";

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞
  const clearAllCache = () => {
    if ("caches" in window) {
      caches.keys().then((names) => {
        names.forEach((name) => {
          caches.delete(name);
        });
      });
    }
  };

  const clearQueryCache = () => {
    if ("caches" in window) {
      caches.keys().then((names) => {
        names.forEach((name) => {
          if (name.includes("query")) {
            caches.delete(name);
          }
        });
      });
    }
  };

  const clearLocalStorage = () => {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏ –¥–∞—Ç—ã
    const keysToRemove = [
      "search-dates",
      "reservation-form",
      "reservation-step",
      "wizard-data",
      "uploaded-photos",
      "privacy-accepted",
      "selected-country-code",
      "active-image-index",
    ];

    keysToRemove.forEach((key) => {
      localStorage.removeItem(key);
    });

    // –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–∞—à–∏–Ω
    const allKeys = Object.keys(localStorage);
    allKeys.forEach((key) => {
      if (
        key.includes("reservation-form-") ||
        key.includes("reservation-step-") ||
        key.includes("wizard-data-") ||
        key.includes("uploaded-photos-") ||
        key.includes("privacy-accepted-") ||
        key.includes("selected-country-code-") ||
        key.includes("active-image-index-")
      ) {
        localStorage.removeItem(key);
      }
    });

    sessionStorage.clear();
  };

  const clearServiceWorkerCache = async () => {
    if ("serviceWorker" in navigator && navigator.serviceWorker.controller) {
      navigator.serviceWorker.controller.postMessage({
        type: "CLEAR_CACHE",
      });
    }
  };

  const sendMessageToSW = (type: string) => {
    if ("serviceWorker" in navigator && navigator.serviceWorker.controller) {
      navigator.serviceWorker.controller.postMessage({ type });
    }
  };

  const forceClearAllCache = () => {
    clearAllCache();
    clearServiceWorkerCache();
    localStorage.clear();
    sessionStorage.clear();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const clearCacheAfterBooking = () => {
    console.log("üéâ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û—á–∏—â–∞–µ–º –∫–µ—à...");

    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    clearLocalStorage();

    // –û—á–∏—â–∞–µ–º Service Worker –∫–µ—à
    clearServiceWorkerCache();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
    localStorage.removeItem("lastVisitTime");

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    setTimeout(() => {
      window.location.reload();
    }, 1000);
  };

  // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
  const getTimeSinceLastVisit = () => {
    const lastVisit = localStorage.getItem("lastVisitTime");
    if (!lastVisit) return 0;
    return Date.now() - parseInt(lastVisit);
  };

  const shouldClearCacheByTime = () => {
    const timeSinceLastVisit = getTimeSinceLastVisit();
    return timeSinceLastVisit > autoClearTime;
  };

  const lastVisitTime = Date.now();

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
  useEffect(() => {
    const timeSinceLastVisit = getTimeSinceLastVisit();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (timeSinceLastVisit > autoClearTime) {
      console.log("‚è∞ –ü—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 20 –º–∏–Ω—É—Ç, –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ");
      clearAllCache();
      clearLocalStorage();

      // –û—á–∏—â–∞–µ–º Service Worker –∫–µ—à –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (timeSinceLastVisit > 2 * 60 * 60 * 1000) {
        // 2 —á–∞—Å–∞
        clearServiceWorkerCache();
      }
    }

    // –í dev —Ä–µ–∂–∏–º–µ –≤—Å–µ–≥–¥–∞ –æ—á–∏—â–∞–µ–º –¥–∞—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (isDevelopment) {
      clearLocalStorage();
    }

    // –í production —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
    if (!isDevelopment) {
      localStorage.setItem("lastVisitTime", Date.now().toString());
    }
  }, [autoClearTime, getTimeSinceLastVisit, clearAllCache, isDevelopment]);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ)
  useEffect(() => {
    if (isDevelopment) return; // –¢–æ–ª—å–∫–æ –¥–ª—è production

    const checkAndClearOldData = () => {
      const timeSinceLastVisit = getTimeSinceLastVisit();
      if (timeSinceLastVisit > autoClearTime) {
        console.log("üßπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
        clearLocalStorage();
        clearAllCache();
      }
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    const interval = setInterval(checkAndClearOldData, 5 * 60 * 1000);

    return () => clearInterval(interval);
  }, [autoClearTime, getTimeSinceLastVisit, clearAllCache, isDevelopment]);

  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤ production)
  useEffect(() => {
    if (showDebugInfo || isDevelopment) {
      window.cacheManager = {
        clearAll: clearAllCache,
        clearQuery: clearQueryCache,
        clearStorage: clearLocalStorage,
        getTimeSinceLastVisit,
        shouldClearCacheByTime,
        lastVisitTime,
        forceClear: () => {
          clearAllCache();
          clearServiceWorkerCache();
          localStorage.clear();
          sessionStorage.clear();
          localStorage.removeItem("search-dates");
        },
        forceClearAll: forceClearAllCache,
        forceClearProduction: () => {
          clearAllCache();
          clearServiceWorkerCache();
          sendMessageToSW("CLEAR_CACHE");
        },
        clearLocalStorage: () => {
          localStorage.clear();
          sessionStorage.clear();
        },
        checkCache: () => {
          const keys = Object.keys(localStorage);
          return keys;
        },
        clearServiceWorker: clearServiceWorkerCache,
        clearAfterBooking: clearCacheAfterBooking, // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Å–ª–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      };
    }

    // –ó–∞–±–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    console.log(
      `
üöó %cTERRA RENT CAR - DEV MODE üöó
%c
–ü—Ä–∏–≤–µ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫! üëã
–¢—ã –≤—ã–±—Ä–∞–ª –º–∞—à–∏–Ω—É? üöô
–ï—Å–ª–∏ –Ω–µ—Ç - —Å–∞–º–æ–µ –≤—Ä–µ–º—è! 

%cüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –û—Ç–∫—Ä–æ–π –∫–æ–Ω—Å–æ–ª—å –∏ –≤–≤–µ–¥–∏:
%cwindow.cacheManager.checkCache()

%cüéØ –ù–∞–π–¥–∏ easter egg –Ω–∞ —Å–∞–π—Ç–µ!
%cüéÆ –ü–æ–ø—Ä–æ–±—É–π: console.log("üöó VROOM VROOM! üöó")
%c
    `,
      "color: #ff0000; font-size: 20px; font-weight: bold; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);",
      "color: #ffffff; font-size: 14px;",
      "color: #00ff00; font-size: 16px; font-weight: bold;",
      "color: #ffff00; font-size: 14px; font-family: monospace;",
      "color: #ff00ff; font-size: 16px; font-weight: bold;",
      "color: #ffffff; font-size: 12px;",
      "color: #00ffff; font-size: 14px; font-family: monospace;"
    );

    // –î–æ–±–∞–≤–ª—è–µ–º easter egg –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
    window.terraRentCarEasterEgg = () => {
      console.log(
        `
üéÆ %cEaster Egg –Ω–∞–π–¥–µ–Ω! üéÆ
%c
üöó VROOM VROOM! üöó
üèéÔ∏è –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≥–æ–Ω—â–∏–∫! üèéÔ∏è
üèÅ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –Ω–∞—Ö–æ–¥–∫–æ–π! üèÅ

%cüíé –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥: TERRA-RENT-ROCKS
%c
      `,
        "color: #ff00ff; font-size: 20px; font-weight: bold; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);",
        "color: #ffffff; font-size: 14px;",
        "color: #00ff00; font-size: 16px; font-weight: bold;",
        "color: #ffff00; font-size: 14px; font-family: monospace;"
      );
    };
  }, [
    showDebugInfo,
    isDevelopment,
    clearAllCache,
    clearQueryCache,
    clearLocalStorage,
    getTimeSinceLastVisit,
    shouldClearCacheByTime,
    lastVisitTime,
  ]);

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker
  useEffect(() => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker
        .register("/sw.js")
        .then((registration) => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SW
          registration.addEventListener("updatefound", () => {
            const newWorker = registration.installing;
            if (newWorker) {
              newWorker.addEventListener("statechange", () => {
                if (
                  newWorker.state === "installed" &&
                  navigator.serviceWorker.controller
                ) {
                  // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                }
              });
            }
          });
        })
        .catch((error) => {
          // –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker
        });
    }
  }, []);

  return null;
};

export default CacheManager;
