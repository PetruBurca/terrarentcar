import { useEffect } from "react";
import { useCacheManager } from "@/hooks/use-cache-manager";

// –¢–∏–ø –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ cacheManager
interface CacheManagerGlobal {
  clearAll: () => void;
  clearQuery: () => void;
  clearStorage: () => void;
  getTimeSinceLastVisit: () => number;
  shouldClearCacheByTime: () => boolean;
  lastVisitTime: number;
  forceClear: () => void;
  checkCache: () => string[];
  forceClearProduction: () => void;
  clearServiceWorker: () => void;
  clearLocalStorage: () => void;
}

// –†–∞—Å—à–∏—Ä—è–µ–º Window –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
declare global {
  interface Window {
    cacheManager?: CacheManagerGlobal;
  }
}

interface CacheManagerProps {
  autoClearTime?: number;
  enableDoubleRefresh?: boolean;
  showDebugInfo?: boolean;
}

const CacheManager = ({
  autoClearTime = 5 * 60 * 1000,
  enableDoubleRefresh = true,
  showDebugInfo = false,
}: CacheManagerProps) => {
  const {
    clearAllCache,
    clearQueryCache,
    clearLocalStorage,
    getTimeSinceLastVisit,
    shouldClearCacheByTime,
    lastVisitTime,
  } = useCacheManager({
    autoClearTime,
    enableDoubleRefresh,
  });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const isDevelopment = import.meta.env.DEV;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Service Worker –∫–µ—à–∞
  const clearServiceWorkerCache = async () => {
    if ("serviceWorker" in navigator && "caches" in window) {
      try {
        const cacheNames = await caches.keys();
        await Promise.all(
          cacheNames.map((cacheName) => {
            console.log("üßπ –û—á–∏—â–∞–µ–º SW –∫–µ—à:", cacheName);
            return caches.delete(cacheName);
          })
        );
        console.log("‚úÖ Service Worker –∫–µ—à –æ—á–∏—â–µ–Ω");
      } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ SW –∫–µ—à–∞:", error);
      }
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Service Worker
  const sendMessageToSW = (type: string) => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.ready.then((registration) => {
        registration.active?.postMessage({ type });
      });
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –∫—ç—à–µ–π
  const forceClearAllCache = () => {
    console.log("üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π");
    
    // –û—á–∏—â–∞–µ–º localStorage
    localStorage.clear();
    sessionStorage.clear();
    
    // –û—á–∏—â–∞–µ–º Service Worker –∫—ç—à
    clearServiceWorkerCache();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Service Worker
    sendMessageToSW("CLEAR_CACHE");
    
    // –û—á–∏—â–∞–µ–º React Query –∫—ç—à
    clearQueryCache();
    
    console.log("‚úÖ –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã");
  };

  // –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –û–¢–ö–õ–Æ–ß–ï–ù–û
  useEffect(() => {
    console.log("üö´ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∫—ç—à–∞");
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    localStorage.clear();
    sessionStorage.clear();
    clearServiceWorkerCache();
    clearQueryCache();
    
    console.log("üßπ –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–∏—Å—Ç–æ");
  }, []);
        color: white;
        border: none;
        padding: 8px 12px;
        border-radius: 4px;
        font-size: 12px;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0,0,0,0.3);
      `;
      clearButton.onclick = () => {
        localStorage.clear();
        sessionStorage.clear();
        alert("–ö—ç—à –æ—á–∏—â–µ–Ω! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è.");
        window.location.reload();
      };
      document.body.appendChild(clearButton);
      console.log("üì± –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    const keys = Object.keys(localStorage);
    const hasReservationData = keys.some(
      (key) =>
        key.includes("reservation-form-") ||
        key.includes("reservation-step-") ||
        key.includes("wizard-data-")
    );

    if (hasReservationData) {
      console.log(
        "üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –≤—ã–±—Ä–∞–ª –º–∞—à–∏–Ω—É? –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
      );
    }

    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ —á–µ–º autoClearTime, –æ—á–∏—â–∞–µ–º –∫—ç—à
    if (
      timeSinceLastVisit > autoClearTime &&
      timeSinceLastVisit < 24 * 60 * 60 * 1000
    ) {
      console.log(
        `üïê –ü—Ä–æ—à–ª–æ ${Math.round(
          timeSinceLastVisit / 1000 / 60
        )} –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è, –æ—á–∏—â–∞–µ–º –∫—ç—à`
      );
      clearAllCache();

      // –û—á–∏—â–∞–µ–º Service Worker –∫–µ—à —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (timeSinceLastVisit > 2 * 60 * 60 * 1000) {
        // 2 —á–∞—Å–∞
        clearServiceWorkerCache();
      }
    }
  }, [autoClearTime, getTimeSinceLastVisit, clearAllCache, isDevelopment]);

  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤ production)
  useEffect(() => {
    if (showDebugInfo || isDevelopment) {
      window.cacheManager = {
        clearAll: clearAllCache,
        clearQuery: clearQueryCache,
        clearStorage: clearLocalStorage,
        getTimeSinceLastVisit,
        shouldClearCacheByTime,
        lastVisitTime,
        forceClear: () => {
          console.log("üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–µ—à–µ–π");
          clearAllCache();
          clearServiceWorkerCache();
          localStorage.clear();
          sessionStorage.clear();

          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –¥–∞—Ç—ã –ø–æ–∏—Å–∫–∞
          localStorage.removeItem("search-dates");
          console.log("üóëÔ∏è –û—á–∏—â–µ–Ω—ã –¥–∞—Ç—ã –ø–æ–∏—Å–∫–∞");
        },
        forceClearAll: forceClearAllCache, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
        forceClearProduction: () => {
          console.log("üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞");
          clearAllCache();
          clearServiceWorkerCache();
          sendMessageToSW("CLEAR_CACHE");
        },
        clearLocalStorage: () => {
          console.log("üßπ –†—É—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ localStorage");
          localStorage.clear();
          sessionStorage.clear();
          console.log("üóëÔ∏è localStorage –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω");
        },
        checkCache: () => {
          const keys = Object.keys(localStorage);
          console.log("üìã –¢–µ–∫—É—â–∏–µ –∫–ª—é—á–∏ –≤ localStorage:", keys);
          return keys;
        },
        clearServiceWorker: clearServiceWorkerCache,
      };

      console.log("üîß –ì–ª–æ–±–∞–ª—å–Ω—ã–π cacheManager –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window.cacheManager");
    }
  }, [
    showDebugInfo,
    isDevelopment,
    clearAllCache,
    clearQueryCache,
    clearLocalStorage,
    getTimeSinceLastVisit,
    shouldClearCacheByTime,
    lastVisitTime,
  ]);

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker
  useEffect(() => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker
        .register("/sw.js")
        .then((registration) => {
          console.log("‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:", registration);

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SW
          registration.addEventListener("updatefound", () => {
            const newWorker = registration.installing;
            if (newWorker) {
              newWorker.addEventListener("statechange", () => {
                if (
                  newWorker.state === "installed" &&
                  navigator.serviceWorker.controller
                ) {
                  console.log("üîÑ –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Service Worker");
                  // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                }
              });
            }
          });
        })
        .catch((error) => {
          console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:", error);
        });
    }
  }, []);

  return null;
};

export default CacheManager;
